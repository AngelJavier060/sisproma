<?php

/**
 * This is the model base class for the table "tb_Produccion".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TbProduccion".
 *
 * Columns in table "tb_Produccion" available as properties of the model,
 * followed by relations of table "tb_Produccion" available as properties of the model.
 *
 * @property integer $id_Produccion
 * @property integer $id_Balance
 * @property string $Producto
 * @property integer $Porcentaje
 * @property double $Kg
 * @property double $gr_funda
 * @property integer $Unidades_dia
 * @property double $Valor_unitario
 * @property double $Valor_Total_dia
 * @property integer $Unidades_mes
 * @property double $Valor_Total_mes
 * @property integer $Unidades_anio 
 * @property double $Valor_Total_anio
 * @property integer $Stock
 *
 * @property TbPedido[] $tbPedidos
 * @property TbBalance $idBalance
 */
abstract class BaseTbProduccion extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'tb_Produccion';
    }

    public static function representingColumn() {
        return 'Producto';
    }

    public function rules() {
        return array(
            array('id_Balance, Producto, Porcentaje, gr_funda', 'required'),
            array('id_Produccion, id_Balance, Porcentaje, Stock', 'numerical', 'integerOnly'=>true),
            array('Kg, gr_funda, Valor_unitario, Valor_Total_dia, Valor_Total_mes, Valor_Total_anio , Unidades_dia, Unidades_mes, Unidades_anio', 'numerical'),
            array('Producto', 'length', 'max'=>50),
            array('Kg, Unidades_dia, Valor_unitario, Valor_Total_dia, Unidades_mes, Valor_Total_mes, Unidades_anio, Valor_Total_anio, Stock', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id_Produccion, id_Balance, Producto, Porcentaje, Kg, gr_funda, Unidades_dia, Valor_unitario, Valor_Total_dia, Unidades_mes, Valor_Total_mes, Unidades_anio, Valor_Total_anio, Stock', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'tbPedidos' => array(self::HAS_MANY, 'TbPedido', 'id_Produccion'),
            'idBalance' => array(self::BELONGS_TO, 'TbBalance', 'id_Balance'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id_Produccion' => Yii::t('app', 'Id Produccion'),
                'id_Balance' => Yii::t('app', 'Id Balance'),
                'Producto' => Yii::t('app', 'Producto'),
                'Porcentaje' => Yii::t('app', 'Porcentaje'),
                'Kg' => Yii::t('app', 'Kg'),
                'gr_funda' => Yii::t('app', 'Gr Funda'),
                'Unidades_dia' => Yii::t('app', 'Unidades Dia'),
                'Valor_unitario' => Yii::t('app', 'Valor Unitario'),
                'Valor_Total_dia' => Yii::t('app', 'Valor Total Dia'),
                'Unidades_mes' => Yii::t('app', 'Unidades Mes'),
                'Valor_Total_mes' => Yii::t('app', 'Valor Total Mes'),
                'Unidades_anio' => Yii::t('app', 'Unidades Anio'),
                'Valor_Total_anio' => Yii::t('app', 'Valor Total Anio'),
                'tbPedidos' => null,
                'idBalance' => null,
                'Stock' => Yii::t('app', 'Stock'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id_Produccion', $this->id_Produccion);
        $criteria->compare('id_Balance', $this->id_Balance);
        $criteria->compare('Producto', $this->Producto, true);
        $criteria->compare('Porcentaje', $this->Porcentaje);
        $criteria->compare('Kg', $this->Kg);
        $criteria->compare('gr_funda', $this->gr_funda);
        $criteria->compare('Unidades_dia', $this->Unidades_dia);
        $criteria->compare('Valor_unitario', $this->Valor_unitario);
        $criteria->compare('Valor_Total_dia', $this->Valor_Total_dia);
        $criteria->compare('Unidades_mes', $this->Unidades_mes);
        $criteria->compare('Valor_Total_mes', $this->Valor_Total_mes);
        $criteria->compare('Unidades_anio', $this->Unidades_anio);
        $criteria->compare('Valor_Total_anio', $this->Valor_Total_anio);
        $criteria->compare('Stock', $this->Stock);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}