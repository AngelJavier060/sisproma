<?php

/**
 * This is the model base class for the table "tb_Personal".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TbPersonal".
 *
 * Columns in table "tb_Personal" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id_Personal
 * @property string $Cargo
 * @property integer $Numero_Empleados
 * @property integer $Dias_laborados
 * @property double $Sueldo_Basico
 * @property double $Sueldo_Nominal
 * @property double $HE_50
 * @property double $HE_100
 * @property double $HE_Total
 * @property double $Valor_HE
 * @property double $Provisiones_XIII
 * @property double $Provisiones_XIV
 * @property double $Fondo_Reserva
 * @property double $Total_Ingresos
 * @property double $Aporte_IESS
 * @property double $Total_Egresos
 * @property double $Pago_Total_Mensual
 * @property double $Pago_Anual
 *
 */
abstract class BaseTbPersonal extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'tb_Personal';
    }

    public static function representingColumn() {
        return 'Cargo';
    }

    public function rules() {
        return array(
            array('Numero_Empleados, Cargo', 'required'),
            array('Numero_Empleados, Dias_laborados', 'numerical', 'integerOnly'=>true),
            array('Sueldo_Basico, Sueldo_Nominal, HE_50, HE_100, HE_Total, Valor_HE, Provisiones_XIII, Provisiones_XIV, Fondo_Reserva, Total_Ingresos, Aporte_IESS, Total_Egresos, Pago_Total_Mensual, Pago_Anual', 'numerical'),
            array('Cargo', 'length', 'max'=>75),
            array('Cargo, Numero_Empleados, Dias_laborados, Sueldo_Basico, Sueldo_Nominal, HE_50, HE_100, HE_Total, Valor_HE, Provisiones_XIII, Provisiones_XIV, Fondo_Reserva, Total_Ingresos, Aporte_IESS, Total_Egresos, Pago_Total_Mensual, Pago_Anual', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id_Personal, Cargo, Numero_Empleados, Dias_laborados, Sueldo_Basico, Sueldo_Nominal, HE_50, HE_100, HE_Total, Valor_HE, Provisiones_XIII, Provisiones_XIV, Fondo_Reserva, Total_Ingresos, Aporte_IESS, Total_Egresos, Pago_Total_Mensual, Pago_Anual', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id_Personal' => Yii::t('app', 'Id Personal'),
                'Cargo' => Yii::t('app', 'Cargo'),
                'Numero_Empleados' => Yii::t('app', 'NÂº de empleados'),
                'Dias_laborados' => Yii::t('app', 'Dias Laborados'),
                'Sueldo_Basico' => Yii::t('app', 'Sueldo Basico'),
                'Sueldo_Nominal' => Yii::t('app', 'Sueldo Nominal'),
                'HE_50' => Yii::t('app', 'Hrs. Extras 50%'),
                'HE_100' => Yii::t('app', 'Hrs. Extras 100%'),
                'HE_Total' => Yii::t('app', 'Total de horas extras'),
                'Valor_HE' => Yii::t('app', 'Valor He'),
                'Provisiones_XIII' => Yii::t('app', 'Provisiones Xiii'),
                'Provisiones_XIV' => Yii::t('app', 'Provisiones Xiv'),
             
                'Fondo_Reserva' => Yii::t('app', 'Fondo de Reserva'),
                'Total_Ingresos' => Yii::t('app', 'Total Ingresos'),
                'Aporte_IESS' => Yii::t('app', 'Aporte Iess'),
                'Total_Egresos' => Yii::t('app', 'Total Egresos'),
                'Pago_Total_Mensual' => Yii::t('app', 'Pago Total Mensual'),
                'Pago_Anual' => Yii::t('app', 'Pago Anual'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id_Personal', $this->id_Personal);
        $criteria->compare('Cargo', $this->Cargo, true);
        $criteria->compare('Numero_Empleados', $this->Numero_Empleados);
        $criteria->compare('Dias_laborados', $this->Dias_laborados);
        $criteria->compare('Sueldo_Basico', $this->Sueldo_Basico);
        $criteria->compare('Sueldo_Nominal', $this->Sueldo_Nominal);
        $criteria->compare('HE_50', $this->HE_50);
        $criteria->compare('HE_100', $this->HE_100);
        $criteria->compare('HE_Total', $this->HE_Total);
        $criteria->compare('Valor_HE', $this->Valor_HE);
        $criteria->compare('Provisiones_XIII', $this->Provisiones_XIII);
        $criteria->compare('Provisiones_XIV', $this->Provisiones_XIV);
        $criteria->compare('Fondo_Reserva', $this->Fondo_Reserva);
        
        $criteria->compare('Total_Ingresos', $this->Total_Ingresos);
        $criteria->compare('Aporte_IESS', $this->Aporte_IESS);
        $criteria->compare('Total_Egresos', $this->Total_Egresos);
        $criteria->compare('Pago_Total_Mensual', $this->Pago_Total_Mensual);
        $criteria->compare('Pago_Anual', $this->Pago_Anual);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}